# Test cases for matrix_divided function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test 1: matrix must be a list of lists of integers or floats, otherwise raise a TypeError exception with the message matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], ['a', 2, 3]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 2: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [2, 3]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# Test 3: div must be a number

>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 'd')
Traceback (most recent call last):
TypeError: div must be a number

# Test 4: division by zero

>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

# Test 5: Valid integer division

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test 6: Valid float division

>>> matrix_divided([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]], 3.5)
[[0.29, 0.57, 0.86], [1.14, 1.43, 1.71], [2.0, 2.29, 2.57]]
